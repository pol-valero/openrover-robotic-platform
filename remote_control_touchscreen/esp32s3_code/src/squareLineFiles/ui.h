// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.0
// LVGL version: 8.3.6
// Project name: RoverScreenDesign

#ifndef _ROVERSCREENDESIGN_UI_H
#define _ROVERSCREENDESIGN_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#if defined __has_include
  #if __has_include("lvgl.h")
    #include "lvgl.h"
  #elif __has_include("lvgl/lvgl.h")
    #include "lvgl/lvgl.h"
  #else
    #include "lvgl.h"
  #endif
#else
  #include "lvgl.h"
#endif

#include "ui_helpers.h"
#include "ui_events.h"

void rotate_Animation( lv_obj_t *TargetObject, int delay);

// SCREEN: ui_MainScreen
void ui_MainScreen_screen_init(void);
extern lv_obj_t *ui_MainScreen;
extern lv_obj_t *ui_TabView;
extern lv_obj_t *ui_MonitorTab;
extern lv_obj_t *ui_RcChannelValuesPanel;
extern lv_obj_t *ui_Joystick1ValuesLabel;
extern lv_obj_t *ui_Joystick2ValuesLabel;
extern lv_obj_t *ui_AuxValuesLabel;
extern lv_obj_t *ui_JoyX1valueLabel;
extern lv_obj_t *ui_JoyY1valueLabel;
extern lv_obj_t *ui_JoyX2valueLabel;
extern lv_obj_t *ui_JoyY2valueLabel;
extern lv_obj_t *ui_AUX1valueLabel;
extern lv_obj_t *ui_AUX2valueLabel;
extern lv_obj_t *ui_AUX3valueLabel;
extern lv_obj_t *ui_AUX4valueLabel;
extern lv_obj_t *ui_EnvMonitorPanel;
extern lv_obj_t *ui_TempArc;
extern lv_obj_t *ui_CurrentEnvDataLabel;
extern lv_obj_t *ui_EnvDataChart;
extern lv_obj_t *ui_HumArc;
extern lv_obj_t *ui_PressureArc;
extern lv_obj_t *ui_TempValueLabel;
extern lv_obj_t *ui_HumValueLabel;
extern lv_obj_t *ui_PressureValueLabel;
extern lv_obj_t *ui_HeightValueLabel;
extern lv_obj_t *ui_CentigradesSymbolLabel;
extern lv_obj_t *ui_MaxMinEnvParametersLabel;
extern lv_obj_t *ui_NowLabel;
extern lv_obj_t *ui_MinusOneMinLabel;
extern lv_obj_t *ui_PercentageSymbolLabel;
extern lv_obj_t *ui_TemperatureIcon;
extern lv_obj_t *ui_PressureIcon;
extern lv_obj_t *ui_HumidityIcon;
extern lv_obj_t *ui_RcChanelValuesLabel;
extern lv_obj_t *ui_RPIstatusPanel;
extern lv_obj_t *ui_CpuTempBar;
extern lv_obj_t *ui_OnlineStatusLabel;
extern lv_obj_t *ui_OnlineStatusIndicatorPanel;
extern lv_obj_t *ui_CpuTempLabel;
extern lv_obj_t *ui_CpuMinTempLabel;
extern lv_obj_t *ui_CpuWorkloadLabel;
extern lv_obj_t *ui_CpuMinWorkloadLabel;
extern lv_obj_t *ui_CpuWorkloadBar;
extern lv_obj_t *ui_CpuTempValueLabel;
extern lv_obj_t *ui_RPIzeroImage;
extern lv_obj_t *ui_CpuWorkloadValueLabel;
extern lv_obj_t *ui_CameraStatusLabel;
extern lv_obj_t *ui_CameraStatusIndicatorPanel;
extern lv_obj_t *ui_CpuMaxTempLabel;
extern lv_obj_t *ui_CpuMaxWorkloadLabel;
extern lv_obj_t *ui_SpeedometerPanel;
extern lv_obj_t *ui_SpeedGaugeImage;
extern lv_obj_t *ui_DistanceImage;
extern lv_obj_t *ui_SpeedLabel;
extern lv_obj_t *ui_DistanceLabel;
extern lv_obj_t *ui_SpeedValueLabel;
extern lv_obj_t *ui_DistanceValueLabel;
extern lv_obj_t *ui_WheelRoverImage;
extern lv_obj_t *ui_RevsLabel;
extern lv_obj_t *ui_RevsValueLabel;
extern lv_obj_t *ui_EnvMonitorLabel;
extern lv_obj_t *ui_RpiStatusTitleLabel;
extern lv_obj_t *ui_SpeedometerLabel;
extern lv_obj_t *ui_HomeTab;
extern lv_obj_t *ui_OtherControlsPanel;
void ui_event_RPIgiveControlSwitch( lv_event_t * e);
extern lv_obj_t *ui_RPIgiveControlSwitch;
extern lv_obj_t *ui_RPIcontrolLabel;
extern lv_obj_t *ui_RPIpowerLabel;
extern lv_obj_t *ui_OpenHatchLabel;
extern lv_obj_t *ui_HeadRandMovLabel;
extern lv_obj_t *ui_EnableRadioRcLabel;
void ui_event_PowerRPIswitch( lv_event_t * e);
extern lv_obj_t *ui_PowerRPIswitch;
void ui_event_OpenHatchSwitch( lv_event_t * e);
extern lv_obj_t *ui_OpenHatchSwitch;
void ui_event_HeadRandMovSwitch( lv_event_t * e);
extern lv_obj_t *ui_HeadRandMovSwitch;
void ui_event_EnableRadioRcSwitch( lv_event_t * e);
extern lv_obj_t *ui_EnableRadioRcSwitch;
void ui_event_HeadControlSwitch( lv_event_t * e);
extern lv_obj_t *ui_HeadControlSwitch;
extern lv_obj_t *ui_HeadControlLabel;
void ui_event_ArmControlSwitch( lv_event_t * e);
extern lv_obj_t *ui_ArmControlSwitch;
extern lv_obj_t *ui_ArmControlLabel;
extern lv_obj_t *ui_SelfRotationControlLabel;
void ui_event_SelfRotationControlSwitch( lv_event_t * e);
extern lv_obj_t *ui_SelfRotationControlSwitch;
void ui_event_ArmServoSelectionSwitch( lv_event_t * e);
extern lv_obj_t *ui_ArmServoSelectionSwitch;
extern lv_obj_t *ui_ControlClawServosLabel;
extern lv_obj_t *ui_ConfigTab;
extern lv_obj_t *ui_ServosAngleTrimmerLabel;
extern lv_obj_t *ui_ServosAngleTrimPanel;
void ui_event_WheelSelectorRoller( lv_event_t * e);
extern lv_obj_t *ui_WheelSelectorRoller;
void ui_event_PlusDegreeButton( lv_event_t * e);
extern lv_obj_t *ui_PlusDegreeButton;
extern lv_obj_t *ui_PlusLabel;
extern lv_obj_t *ui_TrimValueLabel;
void ui_event_MinusDegreeButton( lv_event_t * e);
extern lv_obj_t *ui_MinusDegreeButton;
extern lv_obj_t *ui_MinusLabel;
extern lv_obj_t *ui_OtherConfigsLabel;
extern lv_obj_t *ui_OtherConfigsPanel;
extern lv_obj_t *ui_EnableMotorsLabel;
void ui_event_EnableMotorsSwitch( lv_event_t * e);
extern lv_obj_t *ui_EnableMotorsSwitch;
extern lv_obj_t *ui_TopPanel;
extern lv_obj_t *ui_SignalBar;
extern lv_obj_t *ui_NotificationsLabel;
extern lv_obj_t *ui_RcBatteryContainer;
extern lv_obj_t *ui_RcBatteryIcon;
extern lv_obj_t *ui_RcBatteryBar;
extern lv_obj_t *ui_RcBatteryLabel;
extern lv_obj_t *ui_RoverBatteryContainer;
extern lv_obj_t *ui_RoverBatteryIcon;
extern lv_obj_t *ui_RoverBatteryBar;
extern lv_obj_t *ui_RoverBatteryLabel;
extern lv_obj_t *ui_RoverIcon;
extern lv_obj_t *ui_RcIcon;
extern lv_obj_t *ui_homeIcon;
extern lv_obj_t *ui_monitorIcon;
extern lv_obj_t *ui_configIcon;
extern lv_chart_series_t* ui_EnvDataChart_series_1;
extern lv_chart_series_t* ui_EnvDataChart_series_2;
// CUSTOM VARIABLES

// EVENTS
extern lv_obj_t *ui____initial_actions0;

// IMAGES AND IMAGE SETS
LV_IMG_DECLARE( ui_img_tempimg_png);   // assets/tempImg.png
LV_IMG_DECLARE( ui_img_pressureimg_png);   // assets/pressureImg.png
LV_IMG_DECLARE( ui_img_humidityimg_png);   // assets/humidityImg.png
LV_IMG_DECLARE( ui_img_raspberryimg_png);   // assets/raspberryImg.png
LV_IMG_DECLARE( ui_img_speedimg_png);   // assets/speedImg.png
LV_IMG_DECLARE( ui_img_distanceimg_png);   // assets/distanceImg.png
LV_IMG_DECLARE( ui_img_wheelrovericon_png);   // assets/wheelRoverIcon.png
LV_IMG_DECLARE( ui_img_headimg_png);   // assets/headImg.png
LV_IMG_DECLARE( ui_img_roboticarmimg_png);   // assets/roboticArmImg.png
LV_IMG_DECLARE( ui_img_rotationimg_png);   // assets/rotationImg.png
LV_IMG_DECLARE( ui_img_signalstrengthimg_png);   // assets/signalStrengthImg.png
LV_IMG_DECLARE( ui_img_batteryimg_png);   // assets/batteryImg.png
LV_IMG_DECLARE( ui_img_rovericonimg_png);   // assets/roverIconImg.png
LV_IMG_DECLARE( ui_img_rcimg_png);   // assets/rcImg.png
LV_IMG_DECLARE( ui_img_homeimg_png);   // assets/homeImg.png
LV_IMG_DECLARE( ui_img_monitorimg_png);   // assets/monitorImg.png
LV_IMG_DECLARE( ui_img_configimg_png);   // assets/configImg.png

// FONTS
LV_FONT_DECLARE( ui_font_Montserrat_custom);
LV_FONT_DECLARE( ui_font_Montserrat_medium_custom);
LV_FONT_DECLARE( ui_font_Montserrat_medium_custom_12);

// UI INIT
void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
